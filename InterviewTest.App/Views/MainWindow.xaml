<Window x:Class="InterviewTest.App.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:InterviewTest.App.Converters"
        xmlns:views="clr-namespace:InterviewTest.App.Views"
        xmlns:behaviours="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="Food Inc - List sharing" Height="350" Width="525" Icon="/1499284707_fruit_grapes.png" 
        DataContext="{Binding ProductListViewModel, Mode=OneWay, RelativeSource={RelativeSource Self}}"
        >
    <Window.Resources>
        <converters:HealthIndexColorConverter x:Key="HealthIndexColorConverter" />
        <Style TargetType="TextBox">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="10,0,10,0"></Setter>
            <Setter Property="TextWrapping" Value="Wrap"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="Height" Value="23"></Setter>

        </Style>
        <Style TargetType="Label">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="10,0,10,0"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="Width" Value="100"></Setter>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="10,0,10,0"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
            <Setter Property="Height" Value="23"></Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ListBox ItemsSource="{Binding ProductList}" HorizontalContentAlignment="Stretch">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid HorizontalAlignment="Stretch" Margin="5"
                          Background="{Binding HealthIndex, Converter={StaticResource HealthIndexColorConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel Orientation="Horizontal">
                            <Label VerticalAlignment="Center" Content="{Binding Count }" Margin="0" />
                            <Label VerticalAlignment="Center" Margin="0">x</Label>
                            <Label VerticalAlignment="Center" Margin="0" Content="{Binding Name }" FontWeight="Bold"
                                   FontSize="20" />
                        </StackPanel>
                        <Label Grid.Row="1" Content="{Binding UnitPrice}" FontWeight="Light" FontStyle="Italic"
                               ContentStringFormat="{}{0} $" />


                        <Label Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.RowSpan="2"
                               Content="{Binding TotalPrice}" FontSize="30" ContentStringFormat="{}{0} $" />


                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <StackPanel Grid.Row="1">
            <Button Command="{Binding CheckProductAvailabilitiesCommand }">Check store availability</Button>
        </StackPanel>
        <Grid Grid.Column="1" Grid.RowSpan="2"
              DataContext="{Binding ProductForm, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type views:MainWindow}} }">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Label Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Content="Add something to the list:" FontWeight="Bold" />

            <Label Grid.Column="0" Grid.Row="1" Content="Type" />
            <ComboBox Grid.Column="1" Grid.Row="1"
                      ItemsSource="{Binding ProductTypes}"
                      SelectedItem="{Binding ProductType, Mode=TwoWay}">
            </ComboBox>

            <Label Grid.Column="0" Grid.Row="2" Content="Name" />
            <TextBox Grid.Column="1" Grid.Row="2"
                     Text="{Binding Name, Mode=TwoWay}" />

            <Label Grid.Column="0" Grid.Row="3" Content="Quantity"/>
            <TextBox Grid.Column="1" Grid.Row="3"
                     Text="{Binding Quantity, Mode=TwoWay}">
                <behaviours:Interaction.Triggers>
                    <behaviours:EventTrigger EventName="PreviewTextInput">
                        <behaviours:InvokeCommandAction Command="{Binding IsAllowedInputCommand}" PassEventArgsToCommand="True"/>
                    </behaviours:EventTrigger>
                </behaviours:Interaction.Triggers>
            </TextBox>

            <Label Grid.Column="0" Grid.Row="4" Content="Unit Price"/>
            <TextBox Grid.Column="1" Grid.Row="4"
                     Text="{Binding UnitPrice, Mode=TwoWay}" >
                <behaviours:Interaction.Triggers>
                    <behaviours:EventTrigger EventName="PreviewTextInput">
                        <behaviours:InvokeCommandAction Command="{Binding IsAllowedInputCommand}" PassEventArgsToCommand="True"/>
                    </behaviours:EventTrigger>
                </behaviours:Interaction.Triggers>
            </TextBox>

            <Button Grid.Column="1" Grid.Row="5" Content="Add" HorizontalAlignment="Left" 
                    Margin="10,10,0,0"
                    VerticalAlignment="Top" Width="75"
                    Command="{Binding SubmitCommand}"
            />

        </Grid>
    </Grid>
</Window>